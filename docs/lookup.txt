get_lookup_data

This service returns the data needed to build the UI for getting the Seismic Design UI parameters. 
The data needed to build the FaFvFpgaCalculator is also returned, as is the data needed to build the risk tables. 

Input: callback_name


Output  JSONP format

"callback_name ({
	data_source: [
               {
                id: Integer,
                title: String,
                edition_ids: [ 
                               Integer,
                               ...
                ]
               },
   ],

   edition: {
          id: {
                id: Integer,
                code: String,
                title:  String,
                data_source_id: Integer,
                risk_category_label: String,
                site_soil_class_ids: [
                                       Integer,
                                       ...
                ],
                risk_category_ids: [
                                     Integer,
                                     ...
                ],
                design_code_variant_ids: [
                                           Integer,
                                           ...
                ],
                region_ids: [
                              Integer,
                              ...
                ]
          },
          ...
   },

   site_soil_class: {
                  id: {
                        id: Integer,
                        code: String,
                        title: String
                  },
                  ...
   },

   design_code_variant: {
                      id: {
                            id: Integer,
                            code: String,
                            requires_exceedence_probability: Boolean
                      },
                      ...
   },
   
   region: {
         id: {
               id: Integer,
               name:String,
               min_longitude:Double,
               max_longitude:Double,
               min_latitude:Double,
               max_latitude:Double,
               priority:Integer
         },
         ...
   },

   ftable: {
         id: {
               id: Integer,
               type: String,
               header_value: [
                               Double
                               ...
               ],
               data_rows: [
                        {
                          A: [
                               Double,
                               ...  
                          ]
                        },
                        {
                          B: [
                               Double,
                               ...   
                          ]
                        },
                        {
                          C: [
                               Double,
                               ...
                          ]
                        },
                        {
                          D: [
                               Double,
                               ...
                          ]
                        },
                        {
                          E: [
                               Double,
                               ...
                          ]
                        }
               ]
         }
   }

   risk_table: {
             id: {
                   id: Integer,
                   edition_id: Integer,
                   table_type: String,
                   header_values: [String, String, String],
                   data_rows: [
                            {
                                String: [
                                          String,
                                          String,
                                          String
                                ]
                             },
                             ...
                   ]
             }
   }
})"
